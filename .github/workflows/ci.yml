name: CI

on:
  push:
    branches:
      - master
      - release/**

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - release/**
      
  release:
    types:
      - created
env:
  STEP_TIMEOUT_MINUTES: 60

jobs:
  # skip smoke test as it takes too much time and the unit_test job contains almost the same actions.
  # smoke_test:
    # name: Smoke Test (Debug Build of RoMi)
    # runs-on: windows-latest
    # steps:
      # - uses: actions/checkout@v4
        # with:
          # fetch-depth: 0

      # - name: Install Dependencies
        # timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        # uses: "./.github/steps/install_dependencies"

      # - name: Build RoMi (Debug)
        # shell: pwsh
        # run: dotnet build ./RoMi/RoMi.csproj

  unit_test:
    name: Unit Tests
    runs-on: windows-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/') }} # always run this step if a tag/release was not the trigger

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        uses: "./.github/steps/install_dependencies"

      - name: Build RoMi.Tests (Release)
        shell: pwsh
        run: dotnet build ./RoMi.Tests/RoMi.Tests.csproj  --configuration Release --framework net8.0

      - name: Run Unit Tests
        shell: pwsh
        run: dotnet test ./RoMi.Tests/RoMi.Tests.csproj --no-build -c Release --logger GitHubActions --blame-crash --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

  create_release_artifacts:
    name: Create release artifacts
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/') # only run this step if a tag/release was the trigger

    env:
      Project_Name: ${{ github.event.repository.name }}
      Build_Path_Windows: ${{ github.workspace }}\RoMi\bin\RoMi_Windows
      Build_Path_Android: ${{ github.workspace }}\RoMi\bin\RoMi_Android
      Build_Path_Android_Apk: ${{ github.workspace }}\RoMi\bin\RoMi_Android\com.DrHardReset.RoMi-Signed.apk
      
      Releases_Artifacts_Path: ${{ github.workspace }}\RoMi\bin\Release_Artifacts
      Releases_Artifact_Path_Windows: ${{ github.workspace }}\RoMi\bin\Release_Artifacts\RoMi_Windows.zip
      Releases_Artifact_Path_Android: ${{ github.workspace }}\RoMi\bin\Release_Artifacts\RoMi_Android.apk
      
      Releases_Artifacts_Path_Linux: "value not set"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Replace "\" with "/" as release-script in last step does not allow "\".
      # The newly set env variable value is only visible in the next steps but not in this step.
      - name: Set Releases_Artifacts_Path_Linux env variable
        run: |
          $temp = "${{env.Release_Path_Artifacts}}/${{env.Releases_Artifacts_Path}}" -replace "\\", "/"
          echo "Releases_Artifacts_Path_Linux=$temp" >> $env:GITHUB_ENV

      - name: Set assembly version for Windows and Android
        run:  |
          ./.github/SetAssemblyVersionInFile.ps1 '${{ env.Project_Name }}' '${{ github.workspace }}' 'AssemblyInfo.cs'
          ./.github/SetAssemblyVersionInFile.ps1 '${{ env.Project_Name }}' '${{ github.workspace }}' 'AndroidManifest.xml'

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        uses: "./.github/steps/install_dependencies"
      
      - name: Build Windows Release
        shell: pwsh
        run: dotnet build ./RoMi/RoMi.csproj --configuration Release --framework net8.0-windows10.0.19041 --output ${{ env.Build_Path_Windows }}
      
      - name: Build Android Release
        shell: pwsh
        run: dotnet build ./RoMi/RoMi.csproj --configuration Release --framework net8.0-android --output ${{ env.Build_Path_Android }}

      - name: zip Windows artifact for deployment
        run: |
          Compress-Archive -Path ${{ env.Build_Path_Windows }} -DestinationPath "${{ env.Releases_Artifact_Path_Windows }}"

      - name: copy Android apk artifact for deployment
        run: |
          Copy-Item ${{ env.Build_Path_Android_Apk }} -Destination "${{ env.Releases_Artifact_Path_Android }}"

      # Upload the zipped artifact: https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload zipped artifacts
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: ${{ env.Project_Name }}
          path: ${{ env.Releases_Artifacts_Path }}
        
      # Create the new release (needs a new tag to be created before)
      # Attention: does not allow "\" in filepaths -> must replace with "/"!
      - name: Release with Notes
        #Action needs read and write permissions to be granted in project settings.
        uses: softprops/action-gh-release@v2
        with:
          path:
            ${{ env.Releases_Artifacts_Path_Linux }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}